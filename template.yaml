AWSTemplateFormatVersion: 
  '2010-09-09'

Transform: 
  AWS::Serverless-2016-10-31

Globals:
  Function:
    Timeout: 3
    
Description:
  serverless-resume project for Joe Vay. This will deploy all theh infostructure, code, and assets needed to host joevay.com and it's APIs

#Metadata:
  #optional - Objects that provide additional information about the template.

#Parameters:
  #optional - Values to pass to your template at runtime (when you create or update a stack). You can refer to parameters from the Resources and Outputs sections of the template.

#Mappings:
  #optional - A mapping of keys and associated values that you can use to specify conditional parameter values, similar to a lookup table. You can match a key to a corresponding value by using the Fn::FindInMap intrinsic function in the Resources and Outputs sections.

#Conditions:
  #optional - Conditions that control whether certain resources are created or whether certain resource properties are assigned a value during stack creation or update. For example, you could conditionally create a resource that depends on whether the stack is for a production or test environment.

Resources:
  ServerlessResumeBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: serverless-resume-site-bucket-joevay
      AccessControl: PublicRead
      WebsiteConfiguration: 
        IndexDocument: index.html

  ServerlessResumeBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      PolicyDocument:
        Id: ServerlessResumeBucketPolicy
        Version: 2012-10-17
        Statement:
          - Sid: PublicReadForGetBucketObjects
            Effect: Allow
            Principal: "*"
            Action: "s3:GetObject"
            Resource: !Join
              - ""
              - - "arn:aws:s3:::"
                - !Ref ServerlessResumeBucket
                - /*
      Bucket: !Ref ServerlessResumeBucket

  ServerlessResumeDistribution:
    Type: "AWS::CloudFront::Distribution"
    Properties:
      DistributionConfig:
        Aliases: 
        - joevay.com
        - www.joevay.com
        Comment: Distribution for Serverless Resume site
        PriceClass: PriceClass_All
        DefaultCacheBehavior:
          ViewerProtocolPolicy: allow-all
          TargetOriginId: serverless-resume-site-bucket-joevay.s3.us-east-1.amazonaws.com   #should this be hard coded?
          DefaultTTL: 10
          MinTTL: 0
          MaxTTL: 30
          ForwardedValues:
            QueryString: false
        Origins:
          - DomainName: serverless-resume-site-bucket-joevay.s3.us-east-1.amazonaws.com    #should this be hard coded?
            Id: serverless-resume-site-bucket-joevay.s3.us-east-1.amazonaws.com      #should this be hard coded?
            CustomOriginConfig:
              OriginProtocolPolicy: match-viewer
        Enabled: "true"
        DefaultRootObject: index.html
        HttpVersion: http2and3 
        ViewerCertificate: 
          AcmCertificateArn: !Ref ServerlessResumeCertificate
          MinimumProtocolVersion: TLSv1.2_2021
          SslSupportMethod: sni-only
        
  
  ServerlessResumeCertificate:
    Type: AWS::CertificateManager::Certificate
    Properties:
      DomainName: joevay.com #TODO: Don't hardcode me??
      DomainValidationOptions:
        - DomainName: joevay.com
          HostedZoneId: Z09001641DYZ6HJ2YF0G1 #dont hard code me
      SubjectAlternativeNames:
        - "*.joevay.com"
      ValidationMethod: DNS

  ServerlessResumeHostedZone: 
    Type: "AWS::Route53::HostedZone"
    Properties: 
      HostedZoneConfig: 
        Comment: Hosted Zone for joevay.com deployed by Serverless Resume project
      Name: joevay.com

  ServerlessResumeRecordSetGroup:
    Type: AWS::Route53::RecordSetGroup
    Properties: 
      Comment: record set group for joeyvay.com deployed by serverless resume site project
      HostedZoneName: joevay.com.
      RecordSets: 
        - Name: joevay.com.
          Type: A
          AliasTarget:
               DNSName: !GetAtt ServerlessResumeDistribution.DomainName #joevay.com
               HostedZoneId: Z2FDTNDATAQYW2 #same value for CF distribuiton << can we pull by fef tho?
              
        - Name: joevay.com.
          Type: AAAA
          AliasTarget:
            DNSName: !GetAtt ServerlessResumeDistribution.DomainName #joevay.com
            HostedZoneId: Z2FDTNDATAQYW2 #same value for CF distribuiton << can we pull by fef tho?

        - Name: www.joevay.com.
          Type: A
          AliasTarget:
            DNSName: !GetAtt ServerlessResumeDistribution.DomainName #joevay.com
            HostedZoneId: Z2FDTNDATAQYW2 #same value for CF distribuiton << can we pull by fef tho?
    
        - Name: www.joevay.com.
          Type: AAAA
          AliasTarget:
            DNSName: !GetAtt ServerlessResumeDistribution.DomainName #joevay.com
            HostedZoneId: Z2FDTNDATAQYW2 #same value for CF distribuiton << can we pull by fef tho?

        - Name: resume.joevay.com.
          Type: AAAA
          AliasTarget:
            DNSName: !GetAtt ServerlessResumeDistribution.DomainName #joevay.com
            HostedZoneId: Z2FDTNDATAQYW2 #same value for CF distribuiton << can we pull by fef tho?

  GetResumeContentFunction:
    Type: AWS::Serverless::Function 
    Properties:
      CodeUri: get_resume_content/
      Handler: get_resume_content.lambda_handler
      Runtime: python3.8
      Policies:
        - Statement:
          - Sid: VisualEditor0
            Effect: Allow
            Action: s3:GetObject
            Resource: arn:aws:s3:::joevay.backpack/json_resume_template.json
      Architectures:
        - x86_64
      Events:
        Resume:
          Type: Api 
          Properties:
            Path: /resume/json
            Method: get

Outputs:
  ServerlessResumeApi:
    Description: "API Gateway endpoint URL for Prod stage for Serverless Resume API function"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/hello/"
  GetResumeContentFunction:
    Description: "Serverless Resume API Lambda Function ARN"
    Value: !GetAtt GetResumeContentFunction.Arn
  GetResumeContentFunctionIamRole:
    Description: "Implicit IAM Role created for Serverless Resume API function"
    Value: !GetAtt GetResumeContentFunctionRole.Arn